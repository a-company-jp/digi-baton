{
    "swagger": "2.0",
    "info": {
        "title": "Digi Baton API",
        "contact": {},
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/accounts": {
            "get": {
                "description": "ユーザが開示しているアカウント一覧を取得する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "アカウント一覧取得",
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.AccountResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "アカウントを更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "アカウント更新",
                "parameters": [
                    {
                        "description": "アカウント情報",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "アカウントを作成する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "アカウント作成",
                "parameters": [
                    {
                        "description": "アカウント情報",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "アカウントを削除する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "アカウント削除",
                "parameters": [
                    {
                        "description": "アカウント情報",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DeleteAccountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/alive-checks": {
            "get": {
                "description": "アライブチェック履歴一覧を取得する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aliveChecks"
                ],
                "summary": "アライブチェック履歴一覧取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "アライブチェック履歴を取得するユーザのID",
                        "name": "passerID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.AliveCheckHistoryResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "アライブチェック履歴を更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aliveChecks"
                ],
                "summary": "アライブチェック履歴更新",
                "parameters": [
                    {
                        "description": "アライブチェック履歴更新リクエスト",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AliveCheckHistoryUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.AliveCheckHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "アライブチェック履歴を作成する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aliveChecks"
                ],
                "summary": "アライブチェック履歴作成",
                "parameters": [
                    {
                        "description": "アライブチェック履歴作成リクエスト",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AliveCheckHistoryCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.AliveCheckHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "description": "ユーザが開示しているデバイス一覧を取得する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "デバイス一覧取得",
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.DeviceResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "デバイスを更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "デバイス更新",
                "parameters": [
                    {
                        "description": "デバイス情報",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DeviceCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.DeviceResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "デバイスを追加する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "デバイス追加",
                "parameters": [
                    {
                        "description": "デバイス情報",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DeviceCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.DeviceResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "デバイスを削除する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "デバイス削除",
                "parameters": [
                    {
                        "description": "デバイス情報",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DeleteDeviceCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.DeviceResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/disclosures": {
            "get": {
                "description": "ユーザが受けた開示請求一覧を取得する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disclosures"
                ],
                "summary": "開示申請一覧取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "開示請求を出したユーザのID",
                        "name": "requesterID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.DisclosureResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "リクエストが不正",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "開示請求が見つかりませんでした",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "開示申請のステータスを更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disclosures"
                ],
                "summary": "開示申請更新",
                "parameters": [
                    {
                        "description": "開示申請情報",
                        "name": "disclosure",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DisclosureUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.DisclosureResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストが不正",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "開示申請の更新に失敗",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "ユーザが他のユーザに開示請求を出す",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disclosures"
                ],
                "summary": "開示申請作成",
                "parameters": [
                    {
                        "description": "開示請求情報",
                        "name": "disclosure",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DisclosureCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.DisclosureResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストが不正",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "開示請求の作成に失敗",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "開示申請を削除する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disclosures"
                ],
                "summary": "開示申請削除",
                "parameters": [
                    {
                        "description": "開示申請情報",
                        "name": "disclosure",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DisclosureDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.DisclosureResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストが不正",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "開示申請の削除に失敗",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "description": "ユーザが開示しているサブスクリプション一覧を取得する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "サブスクリプション一覧取得",
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.SubscriptionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "既存のサブスクリプション情報を更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "サブスクリプション更新",
                "parameters": [
                    {
                        "description": "サブスクリプション情報",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "新しいサブスクリプションを作成する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "サブスクリプション作成",
                "parameters": [
                    {
                        "description": "サブスクリプション情報",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "指定されたサブスクリプションを削除する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "サブスクリプション削除",
                "parameters": [
                    {
                        "description": "削除するサブスクリプション情報",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DeleteSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trusts": {
            "get": {
                "description": "ユーザが開示している相続関係一覧を取得する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trusts"
                ],
                "summary": "相続関係の一覧取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "相続関係を取得するユーザのID",
                        "name": "passerID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.TrustResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "ユーザ間の相続関係を更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trusts"
                ],
                "summary": "相続関係の更新",
                "parameters": [
                    {
                        "description": "相続関係",
                        "name": "trust",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTrustRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.TrustResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "ユーザ間の相続関係を作成する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trusts"
                ],
                "summary": "相続関係の作成",
                "parameters": [
                    {
                        "description": "相続関係",
                        "name": "trust",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TrustRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.TrustResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "ユーザ間の相続関係を削除する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trusts"
                ],
                "summary": "相続関係の削除",
                "parameters": [
                    {
                        "description": "相続関係",
                        "name": "trust",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DeleteTrustRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.TrustResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "put": {
                "description": "clerkでユーザ認証した後にバックエンドのDBにユーザを更新するためのエンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ユーザ更新",
                "parameters": [
                    {
                        "description": "ユーザ情報",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "clerkでユーザ認証した後にバックエンドのDBにユーザを登録するためのエンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ユーザ登録",
                "parameters": [
                    {
                        "description": "ユーザ情報",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストデータが不正です",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "データベース接続に失敗しました",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AccountCreateRequest": {
            "type": "object",
            "properties": {
                "accountUsername": {
                    "type": "string"
                },
                "appDescription": {
                    "type": "string"
                },
                "appIconUrl": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "appTemplateID": {
                    "type": "integer"
                },
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "email": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "plsDelete": {
                    "type": "boolean"
                }
            }
        },
        "handlers.AccountResponse": {
            "type": "object",
            "properties": {
                "accountUsername": {
                    "type": "string"
                },
                "appDescription": {
                    "type": "string"
                },
                "appIconUrl": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "appTemplateID": {
                    "type": "integer"
                },
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "email": {
                    "type": "string"
                },
                "encPassword": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isDisclosed": {
                    "type": "boolean"
                },
                "memo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "plsDelete": {
                    "type": "boolean"
                },
                "trustID": {
                    "type": "integer"
                }
            }
        },
        "handlers.AliveCheckHistoryCreateRequest": {
            "type": "object",
            "properties": {
                "checkMethod": {
                    "type": "integer"
                },
                "customedData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "targetUserID": {
                    "type": "string"
                }
            }
        },
        "handlers.AliveCheckHistoryResponse": {
            "type": "object",
            "properties": {
                "checkMethod": {
                    "type": "integer"
                },
                "checkSuccess": {
                    "type": "boolean"
                },
                "checkSuccessTime": {
                    "type": "string"
                },
                "checkTime": {
                    "type": "string"
                },
                "customedData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string"
                },
                "targetUserID": {
                    "type": "string"
                }
            }
        },
        "handlers.AliveCheckHistoryUpdateRequest": {
            "type": "object",
            "properties": {
                "checkMethod": {
                    "type": "integer"
                },
                "checkSuccess": {
                    "type": "boolean"
                },
                "customedData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "handlers.DeleteAccountCreateRequest": {
            "type": "object",
            "properties": {
                "deviceID": {
                    "type": "integer"
                },
                "passerID": {
                    "type": "string"
                }
            }
        },
        "handlers.DeleteDeviceCreateRequest": {
            "type": "object",
            "properties": {
                "deviceID": {
                    "type": "integer"
                },
                "passerID": {
                    "type": "string"
                }
            }
        },
        "handlers.DeleteSubscriptionRequest": {
            "type": "object",
            "properties": {
                "subscriptionID": {
                    "type": "integer"
                }
            }
        },
        "handlers.DeleteTrustRequest": {
            "type": "object",
            "properties": {
                "passerID": {
                    "type": "string"
                },
                "trustID": {
                    "type": "integer"
                }
            }
        },
        "handlers.DeviceCreateRequest": {
            "type": "object",
            "properties": {
                "credentialType": {
                    "type": "integer"
                },
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "deviceDescription": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "integer"
                },
                "deviceUsername": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.DeviceResponse": {
            "type": "object",
            "properties": {
                "credentialType": {
                    "type": "integer"
                },
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "deviceDescription": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "integer"
                },
                "deviceUsername": {
                    "type": "string"
                },
                "encPassword": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "trustID": {
                    "type": "integer"
                }
            }
        },
        "handlers.DisclosureCreateRequest": {
            "type": "object",
            "properties": {
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "deadlineDuration": {
                    "type": "integer"
                },
                "passerID": {
                    "type": "string"
                },
                "requesterID": {
                    "type": "string"
                }
            }
        },
        "handlers.DisclosureDeleteRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "requesterID": {
                    "type": "string"
                }
            }
        },
        "handlers.DisclosureResponse": {
            "type": "object",
            "properties": {
                "customData": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "disclosed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "inProgress": {
                    "type": "boolean"
                },
                "issuedTime": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "preventedBy": {
                    "type": "string"
                },
                "requesterID": {
                    "type": "string"
                }
            }
        },
        "handlers.DisclosureUpdateRequest": {
            "type": "object",
            "properties": {
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "deadLine": {
                    "type": "string"
                },
                "disclosed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "inProgress": {
                    "type": "boolean"
                },
                "passerID": {
                    "type": "string"
                },
                "preventedBy": {
                    "type": "string"
                },
                "requesterID": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.SubscriptionCreateRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingCycle": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "email": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "plsDelete": {
                    "type": "boolean"
                },
                "serviceName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingCycle": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "email": {
                    "type": "string"
                },
                "encPassword": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isDisclosed": {
                    "type": "boolean"
                },
                "memo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "plsDelete": {
                    "type": "boolean"
                },
                "serviceName": {
                    "type": "string"
                },
                "trustID": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.SubscriptionUpdateRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingCycle": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "customData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "email": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memo": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passerID": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "plsDelete": {
                    "type": "boolean"
                },
                "serviceName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.TrustRequest": {
            "type": "object",
            "properties": {
                "passerID": {
                    "type": "string"
                },
                "reviverID": {
                    "type": "string"
                }
            }
        },
        "handlers.TrustResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "passerID": {
                    "type": "string"
                },
                "reviverID": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateTrustRequest": {
            "type": "object",
            "properties": {
                "passerID": {
                    "type": "string"
                },
                "reviverID": {
                    "type": "string"
                },
                "trustID": {
                    "type": "integer"
                }
            }
        },
        "handlers.UserCreateRequest": {
            "type": "object",
            "properties": {
                "clerkUserID": {
                    "type": "string"
                },
                "defaultReceiverID": {
                    "type": "string"
                }
            }
        },
        "handlers.UserResponse": {
            "type": "object",
            "properties": {
                "clerkUserID": {
                    "type": "string"
                },
                "defaultReceiverID": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        }
    }
}